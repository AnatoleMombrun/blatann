import struct
from blatann.utils import IntEnumWithDescription


class Format(IntEnumWithDescription):
    """
    Format enumeration for use with the :class:`blatann.gatt.PresentationFormat` class
    """
    # Source: https://www.bluetooth.com/specifications/assigned-numbers/format-types/
    # Date: 2023/03/23
    rfu = 0x00, "Reserved for future use"
    boolean = 0x01, "unsigned 1-bit; 0=false, 1=true"
    twobit = 0x02, "unsigned 2-bit integer"
    nibble = 0x03, "unsigned 4-bit integer"
    uint8 = 0x04, "unsigned 8-bit integer"
    uint12 = 0x05, "unsigned 12-bit integer"
    uint16 = 0x06, "unsigned 16-bit integer"
    uint24 = 0x07, "unsigned 24-bit integer"
    uint32 = 0x08, "unsigned 32-bit integer"
    uint48 = 0x09, "unsigned 48-bit integer"
    uint64 = 0x0A, "unsigned 64-bit integer"
    uint128 = 0x0B, "unsigned 128-bit integer"
    sint8 = 0x0C, "signed 8-bit integer"
    sint12 = 0x0D, "signed 12-bit integer"
    sint16 = 0x0E, "signed 16-bit integer"
    sint24 = 0x0F, "signed 24-bit integer"
    sint32 = 0x10, "signed 32-bit integer"
    sint48 = 0x11, "signed 48-bit integer"
    sint64 = 0x12, "signed 64-bit integer"
    sint128 = 0x13, "signed 128-bit integer"
    float32 = 0x14, "IEEE-754 32-bit floating point"
    float64 = 0x15, "IEEE-754 64-bit floating point"
    sfloat = 0x16, "IEEE-11073 16-bit SFLOAT"
    float = 0x17, "IEEE-11073 32-bit FLOAT"
    duint16 = 0x18, "IEEE-20601 format"
    utf8s = 0x19, "UTF-8 string"
    utf16s = 0x1A, "UTF-16 string"
    struct = 0x1B, "Opaque structure"


class Namespace(IntEnumWithDescription):
    """
    Namespace enumeration for use with the :class:`blatann.gatt.PresentationFormat` class
    """
    unknown = 0x0000
    bt_sig = 0x0001, "Bluetooth SIG"


class NamespaceDescriptor(IntEnumWithDescription):
    """
    Namespace descriptor enumeration for use with the :class:`blatann.gatt.PresentationFormat` class
    """
    # Source: https://www.bluetooth.com/specifications/assigned-numbers/gatt-namespace-descriptors/
    # Date: 2023/03/23
    # Trimmed down to the named values (e.g. items like 'twentieth = 20' were stripped)
    auxiliary = 0x0108
    back = 0x0101
    backup = 0x0107
    bottom = 0x0103
    external = 0x0110
    flash = 0x010A
    front = 0x0100
    inside = 0x010B
    internal = 0x010F
    left = 0x010D
    lower = 0x0105
    main = 0x0106
    outside = 0x010C
    right = 0x010E
    supplementary = 0x0109
    top = 0x0102
    unknown = 0x0000
    upper = 0x0104


class Units(IntEnumWithDescription):
    """
    Units enumeration for use with the :class:`blatann.gatt.PresentationFormat` class
    """
    # Source: https://www.bluetooth.com/specifications/assigned-numbers/units/
    # Date: 2023/03/23

    unitless = 0x2700, "unitless"
    absorbed_dose_gray = 0x2733, "absorbed dose (gray)"
    absorbed_dose_rate_gray_per_second = 0x2754, "absorbed dose rate (gray per second)"
    acceleration_metres_per_second_squared = 0x2713, "acceleration (metres per second squared)"
    activity_referred_to_a_radionuclide_becquerel = 0x2732, "activity referred to a radionuclide (becquerel)"
    amount_concentration_mole_per_cubic_metre = 0x271a, "amount concentration (mole per cubic metre)"
    amount_of_substance_mole = 0x2706, "amount of substance (mole)"
    angular_acceleration_radian_per_second_squared = 0x2744, "angular acceleration (radian per second squared)"
    angular_velocity_radian_per_second = 0x2743, "angular velocity (radian per second)"
    angular_velocity_revolution_per_minute = 0x27a8, "angular velocity (revolution per minute)"
    area_barn = 0x2784, "area (barn)"
    area_hectare = 0x2766, "area (hectare)"
    area_square_metres = 0x2710, "area (square metres)"
    capacitance_farad = 0x2729, "capacitance (farad)"
    catalytic_activity_concentration_katal_per_cubic_metre = 0x2757, "catalytic activity concentration (katal per cubic metre)"
    catalytic_activity_katal = 0x2735, "catalytic activity (katal)"
    concentration_count_per_cubic_metre = 0x27b5, "concentration (count per cubic metre)"
    concentration_parts_per_billion = 0x27c5, "concentration (parts per billion)"
    concentration_parts_per_million = 0x27c4, "concentration (parts per million)"
    current_density_ampere_per_square_metre = 0x2718, "current density (ampere per square metre)"
    density_kilogram_per_cubic_metre = 0x2715, "density (kilogram per cubic metre)"
    dose_equivalent_sievert = 0x2734, "dose equivalent (sievert)"
    dynamic_viscosity_pascal_second = 0x2740, "dynamic viscosity (pascal second)"
    electric_charge_ampere_hours = 0x27b0, "electric charge (ampere hours)"
    electric_charge_coulomb = 0x2727, "electric charge (coulomb)"
    electric_charge_density_coulomb_per_cubic_metre = 0x274c, "electric charge density (coulomb per cubic metre)"
    electric_conductance_siemens = 0x272b, "electric conductance (siemens)"
    electric_current_ampere = 0x2704, "electric current (ampere)"
    electric_field_strength_volt_per_metre = 0x274b, "electric field strength (volt per metre)"
    electric_flux_density_coulomb_per_square_metre = 0x274e, "electric flux density (coulomb per square metre)"
    electric_potential_difference_volt = 0x2728, "electric potential difference (volt)"
    electric_resistance_ohm = 0x272a, "electric resistance (ohm)"
    electrical_apparent_energy_kilovolt_ampere_hour = 0x27c7, "Electrical Apparent Energy (kilovolt ampere hour)"
    eleectrical_apparent_power_volt_ampere = 0x27c8, "Electrical Apparent Power (volt ampere)"
    energy_density_joule_per_cubic_metre = 0x274a, "energy density (joule per cubic metre)"
    energy_gram_calorie = 0x27a9, "energy (gram calorie)"
    energy_joule = 0x2725, "energy (joule)"
    energy_kilogram_calorie = 0x27aa, "energy (kilogram calorie)"
    energy_kilowatt_hour = 0x27ab, "energy (kilowatt hour)"
    exposure_coulomb_per_kilogram = 0x2753, "exposure (coulomb per kilogram)"
    force_newton = 0x2723, "force (newton)"
    frequency_hertz = 0x2722, "frequency (hertz)"
    heat_capacity_joule_per_kelvin = 0x2746, "heat capacity (joule per kelvin)"
    heat_flux_density_watt_per_square_metre = 0x2745, "heat flux density (watt per square metre)"
    illuminance_lux = 0x2731, "illuminance (lux)"
    inductance_henry = 0x272e, "inductance (henry)"
    irradiance_watt_per_square_metre = 0x27b6, "irradiance (watt per square metre)"
    length_foot = 0x27a3, "length (foot)"
    length_inch = 0x27a2, "length (inch)"
    length_metre = 0x2701, "length (metre)"
    length_mile = 0x27a4, "length (mile)"
    length_nautical_mile = 0x2783, "length (nautical mile)"
    length_parsec = 0x27a1, "length (parsec)"
    length_yard = 0x27a0, "length (yard)"
    length_angstrom = 0x2782, "length (ångström)"
    logarithmic_radio_quantity_bel = 0x2787, "logarithmic radio quantity (bel)"
    logarithmic_radio_quantity_neper = 0x2786, "logarithmic radio quantity (neper)"
    luminance_candela_per_square_metre = 0x271c, "luminance (candela per square metre)"
    luminous_efficacy_lumen_per_watt = 0x27be, "luminous efficacy (lumen per watt)"
    luminous_energy_lumen_hour = 0x27bf, "luminous energy (lumen hour)"
    luminous_exposure_lux_hour = 0x27c0, "luminous exposure (lux hour)"
    luminous_flux_lumen = 0x2730, "luminous flux (lumen)"
    luminous_intensity_candela = 0x2707, "luminous intensity (candela)"
    magnetic_field_strength_ampere_per_metre = 0x2719, "magnetic field strength (ampere per metre)"
    magnetic_flux_density_tesla = 0x272d, "magnetic flux density (tesla)"
    magnetic_flux_weber = 0x272c, "magnetic flux (weber)"
    mass_concentration_kilogram_per_cubic_metre = 0x271b, "mass concentration (kilogram per cubic metre)"
    mass_density_milligram_per_decilitre = 0x27b1, "mass density (milligram per decilitre)"
    mass_density_millimole_per_litre = 0x27b2, "mass density (millimole per litre)"
    mass_density_rate_milligram_per_decilitre_per_minute = 0x27c6, "mass density rate ((milligram per decilitre) per minute)"
    mass_flow_gram_per_second = 0x27c1, "mass flow (gram per second)"
    mass_kilogram = 0x2702, "mass (kilogram)"
    mass_pound = 0x27b8, "mass (pound)"
    mass_tonne = 0x2768, "mass (tonne)"
    metabolic_equivalent = 0x27b9, "metabolic equivalent"
    molar_energy_joule_per_mole = 0x2751, "molar energy (joule per mole)"
    molar_entropy_joule_per_mole_kelvin = 0x2752, "molar entropy (joule per mole kelvin)"
    moment_of_force_newton_metre = 0x2741, "moment of force (newton metre)"
    per_mille = 0x27ae, "per mille"
    percentage = 0x27ad, "percentage"
    period_beats_per_minute = 0x27af, "period (beats per minute)"
    permeability_henry_per_metre = 0x2750, "permeability (henry per metre)"
    permittivity_farad_per_metre = 0x274f, "permittivity (farad per metre)"
    plane_angle_degree = 0x2763, "plane angle (degree)"
    plane_angle_minute = 0x2764, "plane angle (minute)"
    plane_angle_radian = 0x2720, "plane angle (radian)"
    plane_angle_second = 0x2765, "plane angle (second)"
    power_watt = 0x2726, "power (watt)"
    pressure_bar = 0x2780, "pressure (bar)"
    pressure_millimetre_of_mercury = 0x2781, "pressure (millimetre of mercury)"
    pressure_pascal = 0x2724, "pressure (pascal)"
    pressure_pound_force_per_square_inch = 0x27a5, "pressure (pound-force per square inch)"
    radiance_watt_per_square_metre_steradian = 0x2756, "radiance (watt per square metre steradian)"
    radiant_intensity_watt_per_steradian = 0x2755, "radiant intensity (watt per steradian)"
    refractive_index = 0x271d, "refractive index"
    relative_permeability = 0x271e, "relative permeability"
    solid_angle_steradian = 0x2721, "solid angle (steradian)"
    sound_pressure_decibel_spl = 0x27c3, "sound pressure (decibel)"
    specific_energy_joule_per_kilogram = 0x2748, "specific energy (joule per kilogram)"
    specific_heat_capacity_joule_per_kilogram_kelvin = 0x2747, "specific heat capacity (joule per kilogram kelvin)"
    specific_volume_cubic_metre_per_kilogram = 0x2717, "specific volume (cubic metre per kilogram)"
    step_per_minute = 0x27ba, "step (per minute)"
    stroke_per_minute = 0x27bc, "stroke (per minute)"
    surface_charge_density_coulomb_per_square_metre = 0x274d, "surface charge density (coulomb per square metre)"
    surface_density_kilogram_per_square_metre = 0x2716, "surface density (kilogram per square metre)"
    surface_tension_newton_per_metre = 0x2742, "surface tension (newton per metre)"
    thermal_conductivity_watt_per_metre_kelvin = 0x2749, "thermal conductivity (watt per metre kelvin)"
    thermodynamic_temperature_degree_celsius = 0x272f, "Celsius temperature (degree Celsius)"
    thermodynamic_temperature_degree_fahrenheit = 0x27ac, "thermodynamic temperature (degree Fahrenheit)"
    thermodynamic_temperature_kelvin = 0x2705, "thermodynamic temperature (kelvin)"
    time_day = 0x2762, "time (day)"
    time_hour = 0x2761, "time (hour)"
    time_minute = 0x2760, "time (minute)"
    time_month = 0x27b4, "time (month)"
    time_second = 0x2703, "time (second)"
    time_year = 0x27b3, "time (year)"
    transfer_rate_milliliter_per_kilogram_per_minute = 0x27b7, "milliliter (per kilogram per minute)"
    velocity_kilometer_per_minute = 0x27bd, "pace (kilometre per minute)"
    velocity_kilometre_per_hour = 0x27a6, "velocity (kilometre per hour)"
    velocity_knot = 0x2785, "velocity (knot)"
    velocity_metres_per_second = 0x2712, "velocity (metres per second)"
    velocity_mile_per_hour = 0x27a7, "velocity (mile per hour)"
    volume_cubic_metres = 0x2711, "volume (cubic metres)"
    volume_flow_litre_per_second = 0x27c2, "volume flow (litre per second)"
    volume_litre = 0x2767, "volume (litre)"
    wavenumber_reciprocal_metre = 0x2714, "wavenumber (reciprocal metre)"


class AppearanceCategory(IntEnumWithDescription):
    """
    Appearance categories which account for bits 15-6 of the appearance value
    """
    # Source: https://www.bluetooth.com/specifications/assigned-numbers/gatt-namespace-descriptors/
    # Date: 2023/03/23
    unknown = 0x000, "Unknown"
    phone = 0x001, "Phone"
    computer = 0x002, "Computer"
    watch = 0x003, "Watch"
    clock = 0x004, "Clock"
    display = 0x005, "Display"
    remote_control = 0x006, "Remote Control"
    eye_glasses = 0x007, "Eye glasses"
    tag = 0x008, "Tag"
    keyring = 0x009, "Keyring"
    media_player = 0x00A, "Media Player"
    barcode_scanner = 0x00B, "Barcode Scanner"
    thermometer = 0x00C, "Thermometer"
    heart_rate_sensor = 0x00D, "Heart Rate Sensor"
    blood_pressure = 0x00E, "Blood Pressure"
    human_interface_device = 0x00F, "Human Interface Device"
    glucose_meter = 0x010, "Glucose Meter"
    running_walking_sensor = 0x011, "Running Walking Sensor"
    cycling = 0x012, "Cycling"
    control_device = 0x013, "Control Device"
    network_device = 0x014, "Network Device"
    sensor = 0x015, "Sensor"
    light_fixtures = 0x016, "Light Fixtures"
    fan = 0x017, "Fan"
    hvac = 0x018, "HVAC"
    air_conditioning = 0x019, "Air Conditioning"
    humidifier = 0x01A, "Humidifier"
    heating = 0x01B, "Heating"
    access_control = 0x01C, "Access Control"
    motorized_device = 0x01D, "Motorized Device"
    power_device = 0x01E, "Power Device"
    light_source = 0x01F, "Light Source"
    window_covering = 0x020, "Window Covering"
    audio_sink = 0x021, "Audio Sink"
    audio_source = 0x022, "Audio Source"
    motorized_vehicle = 0x023, "Motorized Vehicle"
    domestic_appliance = 0x024, "Domestic Appliance"
    wearable_audio_device = 0x025, "Wearable Audio Device"
    aircraft = 0x026, "Aircraft"
    av_equipment = 0x027, "AV Equipment"
    display_equipment = 0x028, "Display Equipment"
    hearing_aid = 0x029, "Hearing aid"
    gaming = 0x02A, "Gaming"
    signage = 0x02B, "Signage"
    pulse_oximeter = 0x031, "Pulse Oximeter"
    weight_scale = 0x032, "Weight Scale"
    personal_mobility_device = 0x033, "Personal Mobility Device"
    continuous_glucose_monitor = 0x034, "Continuous Glucose Monitor"
    insulin_pump = 0x035, "Insulin Pump"
    medication_delivery = 0x036, "Medication Delivery"
    spirometer = 0x037, "Spirometer"
    outdoor_sports_activity = 0x051, "Outdoor Sports Activity"


class Appearance(IntEnumWithDescription):
    """
    Appearance enumeration for use with advertising data
    """
    # Source: https://www.bluetooth.com/specifications/assigned-numbers/gatt-namespace-descriptors/
    # Date: 2023/03/23
    unknown = 0x0000, "Unknown"

    phone = 0x0040, "Generic Phone"

    computer = 0x0080, "Generic Computer"
    computer_desktop_workstation = 0x0081, "Desktop Workstation"
    computer_server_class_computer = 0x0082, "Server-class Computer"
    computer_laptop = 0x0083, "Laptop"
    computer_handheld_pc_pda = 0x0084, "Handheld PC/PDA (clamshell)"
    computer_palm_size_pc_pda = 0x0085, "Palm-size PC/PDA"
    computer_wearable_computer_watch_size = 0x0086, "Wearable computer (watch size)"
    computer_tablet = 0x0087, "Tablet"
    computer_docking_station = 0x0088, "Docking Station"
    computer_all_in_one = 0x0089, "All in One"
    computer_blade_server = 0x008A, "Blade Server"
    computer_convertible = 0x008B, "Convertible"
    computer_detachable = 0x008C, "Detachable"
    computer_iot_gateway = 0x008D, "IoT Gateway"
    computer_mini_pc = 0x008E, "Mini PC"
    computer_stick_pc = 0x008F, "Stick PC"

    watch = 0x00C0, "Generic Watch"
    sports_watch = 0x00C1, "Sports Watch"
    smartwatch = 0x00C2, "Smartwatch"

    clock = 0x0100, "Generic Clock"
    display = 0x0140, "Generic Display"
    remote_control = 0x0180, "Generic Remote Control"
    eye_glasses = 0x01C0, "Generic Eye-glasses"
    tag = 0x0200, "Generic Tag"
    keyring = 0x0240, "Generic Keyring"
    media_player = 0x0280, "Generic Media Player"
    barcode_scanner = 0x02C0, "Generic Barcode Scanner"

    thermometer = 0x0300, "Thermometer"
    thermometer_ear = 0x0301, "Ear Thermometer"

    heart_rate_sensor = 0x0340, "Generic Heart Rate Sensor"
    heart_rate_sensor_heart_rate_belt = 0x0341, "Heart Rate Belt"

    blood_pressure = 0x0380, "Generic Blood Pressure"
    blood_pressure_arm = 0x0381, "Arm Blood Pressure"
    blood_pressure_wrist = 0x0382, "Wrist Blood Pressure"

    hid = 0x03C0, "Generic Human Interface Device"
    hid_keyboard = 0x03C1, "Keyboard"
    hid_mouse = 0x03C2, "Mouse"
    hid_joystick = 0x03C3, "Joystick"
    hid_gamepad = 0x03C4, "Gamepad"
    hid_digitizer_tablet = 0x03C5, "Digitizer Tablet"
    hid_card_reader = 0x03C6, "Card Reader"
    hid_digital_pen = 0x03C7, "Digital Pen"
    hid_barcode_scanner = 0x03C8, "Barcode Scanner"
    hid_touchpad = 0x03C9, "Touchpad"
    hid_presentation_remote = 0x03CA, "Presentation Remote"

    glucose_meter = 0x0400, "Generic Glucose Meter"

    running_walking_sensor = 0x0440, "Generic Running Walking Sensor"
    running_walking_sensor_in_shoe = 0x0441, "In-Shoe Running Walking Sensor"
    running_walking_sensor_on_shoe = 0x0442, "On-Shoe Running Walking Sensor"
    running_walking_sensor_on_hip = 0x0443, "On-Hip Running Walking Sensor"

    cycling = 0x0480, "Generic Cycling"
    cycling_cycling_computer = 0x0481, "Cycling Computer"
    cycling_speed_sensor = 0x0482, "Speed Sensor"
    cycling_cadence_sensor = 0x0483, "Cadence Sensor"
    cycling_power_sensor = 0x0484, "Power Sensor"
    cycling_speed_cadence_sensor = 0x0485, "Speed and Cadence Sensor"

    control_device = 0x04C0, "Generic Control Device"

    switch = 0x04C1, "Switch"
    switch_multi = 0x04C2, "Multi-switch"
    switch_button = 0x04C3, "Button"
    switch_slider = 0x04C4, "Slider"
    switch_rotary = 0x04C5, "Rotary Switch"
    switch_touch_panel = 0x04C6, "Touch Panel"
    switch_single = 0x04C7, "Single Switch"
    switch_double = 0x04C8, "Double Switch"
    switch_triple = 0x04C9, "Triple Switch"
    switch_battery = 0x04CA, "Battery Switch"
    switch_energy_harvesting = 0x04CB, "Energy Harvesting Switch"
    switch_push_button = 0x04CC, "Push Button"

    network_device = 0x0500, "Generic Network Device"
    network_device_access_point = 0x0501, "Access Point"
    network_device_mesh_device = 0x0502, "Mesh Device"
    network_device_mesh_network_proxy = 0x0503, "Mesh Network Proxy"

    sensor = 0x0540, "Generic Sensor"
    sensor_motion = 0x0541, "Motion Sensor"
    sensor_air_quality = 0x0542, "Air quality Sensor"
    sensor_temperature = 0x0543, "Temperature Sensor"
    sensor_humidity = 0x0544, "Humidity Sensor"
    sensor_leak = 0x0545, "Leak Sensor"
    sensor_smoke = 0x0546, "Smoke Sensor"
    sensor_occupancy = 0x0547, "Occupancy Sensor"
    sensor_contact = 0x0548, "Contact Sensor"
    sensor_carbon_monoxide = 0x0549, "Carbon Monoxide Sensor"
    sensor_carbon_dioxide = 0x054A, "Carbon Dioxide Sensor"
    sensor_ambient_light = 0x054B, "Ambient Light Sensor"
    sensor_energy = 0x054C, "Energy Sensor"
    sensor_color_light = 0x054D, "Color Light Sensor"
    sensor_rain = 0x054E, "Rain Sensor"
    sensor_fire = 0x054F, "Fire Sensor"
    sensor_wind = 0x0550, "Wind Sensor"
    sensor_proximity = 0x0551, "Proximity Sensor"
    sensor_multi = 0x0552, "Multi-Sensor"
    sensor_flush_mounted = 0x0553, "Flush Mounted Sensor"
    sensor_ceiling_mounted = 0x0554, "Ceiling Mounted Sensor"
    sensor_wall_mounted = 0x0555, "Wall Mounted Sensor"
    sensor_multi2 = 0x0556, "Multisensor"
    sensor_energy_meter = 0x0557, "Energy Meter"
    sensor_flame_detector = 0x0558, "Flame Detector"
    sensor_vehicle_tire_pressure = 0x0559, "Vehicle Tire Pressure Sensor"

    light_fixture = 0x0580, "Generic Light Fixture"
    light_fixture_wall_light = 0x0581, "Wall Light"
    light_fixture_ceiling_light = 0x0582, "Ceiling Light"
    light_fixture_floor_light = 0x0583, "Floor Light"
    light_fixture_cabinet_light = 0x0584, "Cabinet Light"
    light_fixture_desk_light = 0x0585, "Desk Light"
    light_fixture_troffer_light = 0x0586, "Troffer Light"
    light_fixture_pendant_light = 0x0587, "Pendant Light"
    light_fixture_in_ground_light = 0x0588, "In-ground Light"
    light_fixture_flood_light = 0x0589, "Flood Light"
    light_fixture_underwater_light = 0x058A, "Underwater Light"
    light_fixture_bollard_with_light = 0x058B, "Bollard with Light"
    light_fixture_pathway_light = 0x058C, "Pathway Light"
    light_fixture_garden_light = 0x058D, "Garden Light"
    light_fixture_pole_top_light = 0x058E, "Pole-top Light"
    light_fixture_spotlight = 0x058F, "Spotlight"
    light_fixture_linear_light = 0x0590, "Linear Light"
    light_fixture_street_light = 0x0591, "Street Light"
    light_fixture_shelves_light = 0x0592, "Shelves Light"
    light_fixture_bay_light = 0x0593, "Bay Light"
    light_fixture_emergency_exit_light = 0x0594, "Emergency Exit Light"
    light_fixture_light_controller = 0x0595, "Light Controller"
    light_fixture_light_driver = 0x0596, "Light Driver"
    light_fixture_bulb = 0x0597, "Bulb"
    light_fixture_low_bay_light = 0x0598, "Low-bay Light"
    light_fixture_high_bay_light = 0x0599, "High-bay Light"

    fan = 0x05C0, "Generic Fan"
    fan_ceiling = 0x05C1, "Ceiling Fan"
    fan_axial = 0x05C2, "Axial Fan"
    fan_exhaust = 0x05C3, "Exhaust Fan"
    fan_pedestal = 0x05C4, "Pedestal Fan"
    fan_desk = 0x05C5, "Desk Fan"
    fan_wall = 0x05C6, "Wall Fan"

    hvac = 0x0600, "Generic HVAC"
    hvac_thermostat = 0x0601, "Thermostat"
    hvac_humidifier = 0x0602, "Humidifier"
    hvac_de_humidifier = 0x0603, "De-humidifier"
    hvac_heater = 0x0604, "Heater"
    hvac_radiator = 0x0605, "Radiator"
    hvac_boiler = 0x0606, "Boiler"
    hvac_heat_pump = 0x0607, "Heat Pump"
    hvac_infrared_heater = 0x0608, "Infrared Heater"
    hvac_radiant_panel_heater = 0x0609, "Radiant Panel Heater"
    hvac_fan_heater = 0x060A, "Fan Heater"
    hvac_air_curtain = 0x060B, "Air Curtain"

    air_conditioning = 0x0640, "Generic Air Conditioning"
    humidifier = 0x0680, "Generic Humidifier"

    heating = 0x06C0, "Generic Heating"
    heating_radiator = 0x06C1, "Radiator"
    heating_boiler = 0x06C2, "Boiler"
    heating_heat_pump = 0x06C3, "Heat Pump"
    heating_infrared_heater = 0x06C4, "Infrared Heater"
    heating_radiant_panel_heater = 0x06C5, "Radiant Panel Heater"
    heating_fan_heater = 0x06C6, "Fan Heater"
    heating_air_curtain = 0x06C7, "Air Curtain"

    access_control = 0x0700, "Generic Access Control"
    access_control_access_door = 0x0701, "Access Door"
    access_control_garage_door = 0x0702, "Garage Door"
    access_control_emergency_exit_door = 0x0703, "Emergency Exit Door"
    access_control_access_lock = 0x0704, "Access Lock"
    access_control_elevator = 0x0705, "Elevator"
    access_control_window = 0x0706, "Window"
    access_control_entrance_gate = 0x0707, "Entrance Gate"
    access_control_door_lock = 0x0708, "Door Lock"
    access_control_locker = 0x0709, "Locker"

    motorized_device = 0x0740, "Generic Motorized Device"
    motorized_device_gate = 0x0741, "Motorized Gate"
    motorized_device_awning = 0x0742, "Awning"
    motorized_device_blinds_or_shades = 0x0743, "Blinds or Shades"
    motorized_device_curtains = 0x0744, "Curtains"
    motorized_device_screen = 0x0745, "Screen"

    power_device = 0x0780, "Generic Power Device"
    power_device_power_outlet = 0x0781, "Power Outlet"
    power_device_power_strip = 0x0782, "Power Strip"
    power_device_plug = 0x0783, "Plug"
    power_device_power_supply = 0x0784, "Power Supply"
    power_device_led_driver = 0x0785, "LED Driver"
    power_device_fluorescent_lamp_gear = 0x0786, "Fluorescent Lamp Gear"
    power_device_hid_lamp_gear = 0x0787, "HID Lamp Gear"
    power_device_charge_case = 0x0788, "Charge Case"
    power_device_power_bank = 0x0789, "Power Bank"

    light_source = 0x07C0, "Generic Light Source"
    light_source_incandescent_light_bulb = 0x07C1, "Incandescent Light Bulb"
    light_source_led_lamp = 0x07C2, "LED Lamp"
    light_source_hid_lamp = 0x07C3, "HID Lamp"
    light_source_fluorescent_lamp = 0x07C4, "Fluorescent Lamp"
    light_source_led_array = 0x07C5, "LED Array"
    light_source_multi_color_led_array = 0x07C6, "Multi-Color LED Array"
    light_source_low_voltage_halogen = 0x07C7, "Low voltage halogen"
    light_source_oled = 0x07C8, "Organic light emitting diode (OLED)"

    window_covering = 0x0800, "Generic Window Covering"
    window_covering_window_shades = 0x0801, "Window Shades"
    window_covering_window_blinds = 0x0802, "Window Blinds"
    window_covering_window_awning = 0x0803, "Window Awning"
    window_covering_window_curtain = 0x0804, "Window Curtain"
    window_covering_exterior_shutter = 0x0805, "Exterior Shutter"
    window_covering_exterior_screen = 0x0806, "Exterior Screen"

    audio_sink = 0x0840, "Generic Audio Sink"
    audio_sink_standalone_speaker = 0x0841, "Standalone Speaker"
    audio_sink_soundbar = 0x0842, "Soundbar"
    audio_sink_bookshelf_speaker = 0x0843, "Bookshelf Speaker"
    audio_sink_standmounted_speaker = 0x0844, "Standmounted Speaker"
    audio_sink_speakerphone = 0x0845, "Speakerphone"

    audio_source = 0x0880, "Generic Audio Source"
    audio_source_microphone = 0x0881, "Microphone"
    audio_source_alarm = 0x0882, "Alarm"
    audio_source_bell = 0x0883, "Bell"
    audio_source_horn = 0x0884, "Horn"
    audio_source_broadcasting_device = 0x0885, "Broadcasting Device"
    audio_source_service_desk = 0x0886, "Service Desk"
    audio_source_kiosk = 0x0887, "Kiosk"
    audio_source_broadcasting_room = 0x0888, "Broadcasting Room"
    audio_source_auditorium = 0x0889, "Auditorium"

    motorized_vehicle = 0x08C0, "Generic Motorized Vehicle"
    motorized_vehicle_car = 0x08C1, "Car"
    motorized_vehicle_large_goods_vehicle = 0x08C2, "Large Goods Vehicle"
    motorized_vehicle_two_wheeled_vehicle = 0x08C3, "2-Wheeled Vehicle"
    motorized_vehicle_motorbike = 0x08C4, "Motorbike"
    motorized_vehicle_scooter = 0x08C5, "Scooter"
    motorized_vehicle_moped = 0x08C6, "Moped"
    motorized_vehicle_three_wheeled_vehicle = 0x08C7, "3-Wheeled Vehicle"
    motorized_vehicle_light_vehicle = 0x08C8, "Light Vehicle"
    motorized_vehicle_quad_bike = 0x08C9, "Quad Bike"
    motorized_vehicle_minibus = 0x08CA, "Minibus"
    motorized_vehicle_bus = 0x08CB, "Bus"
    motorized_vehicle_trolley = 0x08CC, "Trolley"
    motorized_vehicle_agricultural_vehicle = 0x08CD, "Agricultural Vehicle"
    motorized_vehicle_camper_caravan = 0x08CE, "Camper / Caravan"
    motorized_vehicle_recreational_vehicle_motor_home = 0x08CF, "Recreational Vehicle / Motor Home"

    domestic_appliance = 0x0900, "Generic Domestic Appliance"
    domestic_appliance_refrigerator = 0x0901, "Refrigerator"
    domestic_appliance_freezer = 0x0902, "Freezer"
    domestic_appliance_oven = 0x0903, "Oven"
    domestic_appliance_microwave = 0x0904, "Microwave"
    domestic_appliance_toaster = 0x0905, "Toaster"
    domestic_appliance_washing_machine = 0x0906, "Washing Machine"
    domestic_appliance_dryer = 0x0907, "Dryer"
    domestic_appliance_coffee_maker = 0x0908, "Coffee maker"
    domestic_appliance_clothes_iron = 0x0909, "Clothes iron"
    domestic_appliance_curling_iron = 0x090A, "Curling iron"
    domestic_appliance_hair_dryer = 0x090B, "Hair dryer"
    domestic_appliance_vacuum_cleaner = 0x090C, "Vacuum cleaner"
    domestic_appliance_robotic_vacuum_cleaner = 0x090D, "Robotic vacuum cleaner"
    domestic_appliance_rice_cooker = 0x090E, "Rice cooker"
    domestic_appliance_clothes_steamer = 0x090F, "Clothes steamer"

    wearable_audio_device = 0x0940, "Generic Wearable Audio Device"
    wearable_audio_device_earbud = 0x0941, "Earbud"
    wearable_audio_device_headset = 0x0942, "Headset"
    wearable_audio_device_headphones = 0x0943, "Headphones"
    wearable_audio_device_neck_band = 0x0944, "Neck Band"

    aircraft = 0x0980, "Generic Aircraft"
    aircraft_light_aircraft = 0x0981, "Light Aircraft"
    aircraft_microlight = 0x0982, "Microlight"
    aircraft_paraglider = 0x0983, "Paraglider"
    aircraft_large_passenger_aircraft = 0x0984, "Large Passenger Aircraft"

    av_equipment = 0x09C0, "Generic AV Equipment"
    av_equipment_amplifier = 0x09C1, "Amplifier"
    av_equipment_receiver = 0x09C2, "Receiver"
    av_equipment_radio = 0x09C3, "Radio"
    av_equipment_tuner = 0x09C4, "Tuner"
    av_equipment_turntable = 0x09C5, "Turntable"
    av_equipment_cd_player = 0x09C6, "CD Player"
    av_equipment_dvd_player = 0x09C7, "DVD Player"
    av_equipment_bluray_player = 0x09C8, "Bluray Player"
    av_equipment_optical_disc_player = 0x09C9, "Optical Disc Player"
    av_equipment_set_top_box = 0x09CA, "Set-Top Box"

    display_equipment = 0x0A00, "Generic Display Equipment"
    display_equipment_television = 0x0A01, "Television"
    display_equipment_monitor = 0x0A02, "Monitor"
    display_equipment_projector = 0x0A03, "Projector"

    hearing_aid = 0x0A40, "Generic Hearing aid"
    hearing_aid_in_ear = 0x0A41, "In-ear hearing aid"
    hearing_aid_behind_ear = 0x0A42, "Behind-ear hearing aid"
    hearing_aid_cochlear_implant = 0x0A43, "Cochlear Implant"

    gaming = 0x0A80, "Generic Gaming"
    gaming_home_video_game_console = 0x0A81, "Home Video Game Console"
    gaming_portable_handheld_console = 0x0A82, "Portable handheld console"

    signage = 0x0AC0, "Generic Signage"
    signage_digital = 0x0AC1, "Digital Signage"
    signage_electronic_label = 0x0AC2, "Electronic Label"

    pulse_oximeter = 0x0C40, "Generic Pulse Oximeter"
    pulse_oximeter_fingertip = 0x0C41, "Fingertip Pulse Oximeter"
    pulse_oximeter_wrist_worn = 0x0C42, "Wrist Worn Pulse Oximeter"

    weight_scale = 0x0C80, "Generic Weight Scale"

    personal_mobility_device = 0x0CC0, "Generic Personal Mobility Device"
    personal_mobility_device_powered_wheelchair = 0x0CC1, "Powered Wheelchair"
    personal_mobility_device_mobility_scooter = 0x0CC2, "Mobility Scooter"

    continuous_glucose_monitor = 0x0D00, "Generic Continuous Glucose Monitor"

    insulin_pump = 0x0D40, "Generic Insulin Pump"
    insulin_pump_durable_pump = 0x0D41, "Insulin Pump, durable pump"
    insulin_pump_patch_pump = 0x0D44, "Insulin Pump, patch pump"
    insulin_pen = 0x0D48, "Insulin Pen"

    medication_delivery = 0x0D80, "Generic Medication Delivery"

    spirometer = 0x0DC0, "Generic Spirometer"
    spirometer_handheld = 0x0DC1, "Handheld Spirometer"

    outdoor_sports_act = 0x1440, "Generic Outdoor Sports Activity"
    outdoor_sports_act_loc_disp = 0x1441, "Location Display"
    outdoor_sports_act_loc_and_nav_disp = 0x1442, "Location and Navigation Display"
    outdoor_sports_act_loc_pod = 0x1443, "Location Pod"
    outdoor_sports_act_loc_and_navigation_pod = 0x1444, "Location and Navigation Pod"

    def as_bytes(self) -> bytes:
        return struct.pack("<H", self)

    def appearance_category(self) -> AppearanceCategory:
        category_value = int(self) & 0xFFC0  # Lowest 6 bits are the type itself
        return AppearanceCategory(category_value)
